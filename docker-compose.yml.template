version: "3.8"
services:
  postgres:
    restart: always
    image: postgres:15-alpine
    container_name: "postgres"
    environment:
      POSTGRES_MULTIPLE_DATABASES: ogiroid,dashboard
      POSTGRES_PASSWORD: password
      replace with password
      POSTGRES_USER: ogiroid
    networks:
      - postgres
    ports:
      - 5432:5432
    volumes:
      - ./pg-init-scripts/create-multi-pg.sh:/docker-entrypoint-initdb.d/create-multi-pg.sh
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ogiroid"]
      interval: 2s
      timeout: 1s
      retries: 5
  bot:
    links:
      - postgres
    restart: unless-stopped
    build:
      context: Bot
    volumes:
      - ./Bot:/bot:ro
    tty: true
    networks:
      - postgres
    depends_on:
      - postgres

  dashboard:
    restart: unless-stopped
    build:
      context: Dashboard
    ports:
      - 4000:4000
    links:
      - caddy
      - postgres
      - bot

  caddy:
    image: caddy:2.7.6-alpine
    restart: always
    cap_add:
      - NET_ADMIN
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - $PWD/Caddyfile:/etc/caddy/Caddyfile
volumes:
  postgres-data: # allow data to persist in docker managed dir
networks:
  postgres: # postgres <-> bot
  web: # bot <-> web
